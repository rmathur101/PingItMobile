<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='GMSMapPoint' type='{GMSMapPoint=&quot;x&quot;d&quot;y&quot;d}'>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
</struct>
<struct name='GMSOrientation' type='{_GMSOrientation=&quot;heading&quot;d&quot;pitch&quot;d}'>
<field declared_type='CLLocationDirection' name='heading' type='d' const='true'/>
<field declared_type='double' name='pitch' type='d' const='true'/>
</struct>
<struct name='GMSVisibleRegion' type='{_GMSVisibleRegion=&quot;nearLeft&quot;{?=&quot;latitude&quot;d&quot;longitude&quot;d}&quot;nearRight&quot;{?=&quot;latitude&quot;d&quot;longitude&quot;d}&quot;farLeft&quot;{?=&quot;latitude&quot;d&quot;longitude&quot;d}&quot;farRight&quot;{?=&quot;latitude&quot;d&quot;longitude&quot;d}}'>
<field declared_type='CLLocationCoordinate2D' name='nearLeft' type='{_CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'/>
<field declared_type='CLLocationCoordinate2D' name='nearRight' type='{_CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'/>
<field declared_type='CLLocationCoordinate2D' name='farLeft' type='{_CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'/>
<field declared_type='CLLocationCoordinate2D' name='farRight' type='{_CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'/>
</struct>
<constant declared_type='NSString*' name='kGMSAccessibilityCompass' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSAccessibilityMyLocation' type='@' const='true'/>
<constant declared_type='CLLocationDistance' name='kGMSEarthRadius' type='d' const='true'/>
<constant declared_type='double' name='kGMSEquatorProjectedMeter' type='d' const='true'/>
<constant declared_type='CGPoint' name='kGMSGroundOverlayDefaultAnchor' type='{CGPoint=ff}' type64='{CGPoint=dd}' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerCameraBearingKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerCameraLatitudeKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerCameraLongitudeKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerCameraViewingAngleKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerCameraZoomLevelKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerPanoramaFOVKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerPanoramaHeadingKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerPanoramaPitchKey' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSLayerPanoramaZoomKey' type='@' const='true'/>
<constant declared_type='CGPoint' name='kGMSMarkerDefaultGroundAnchor' type='{CGPoint=ff}' type64='{CGPoint=dd}' const='true'/>
<constant declared_type='CGPoint' name='kGMSMarkerDefaultInfoWindowAnchor' type='{CGPoint=ff}' type64='{CGPoint=dd}' const='true'/>
<constant declared_type='NSString*' name='kGMSMarkerLayerLatitude' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSMarkerLayerLongitude' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSMarkerLayerOpacity' type='@' const='true'/>
<constant declared_type='NSString*' name='kGMSMarkerLayerRotation' type='@' const='true'/>
<constant declared_type='float' name='kGMSMaxZoomLevel' type='f' const='true'/>
<constant declared_type='float' name='kGMSMinZoomLevel' type='f' const='true'/>
<constant declared_type='UIImage*' name='kGMSTileLayerNoTile' type='@' const='true'/>
<enum value='2' name='kGMSGeocoderErrorInternal'/>
<enum value='1' name='kGMSGeocoderErrorInvalidCoordinate'/>
<enum value='0' name='kGMSLengthGeodesic'/>
<enum value='2' name='kGMSLengthProjected'/>
<enum value='1' name='kGMSLengthRhumb'/>
<enum value='0' name='kGMSMarkerAnimationNone'/>
<enum value='1' name='kGMSMarkerAnimationPop'/>
<enum value='4' name='kGMSTypeHybrid'/>
<enum value='5' name='kGMSTypeNone'/>
<enum value='1' name='kGMSTypeNormal'/>
<enum value='2' name='kGMSTypeSatellite'/>
<enum value='3' name='kGMSTypeTerrain'/>
<function name='GMSGeometryArea'>
<arg declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='double' type='d'/>
</function>
<function name='GMSGeometryContainsLocation'>
<arg declared_type='CLLocationCoordinate2D' name='point' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='GMSPath*' name='path' type='@'/>
<arg declared_type='BOOL' name='geodesic' type='B'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='GMSGeometryDistance'>
<arg declared_type='CLLocationCoordinate2D' name='from' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' name='to' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='CLLocationDistance' type='d'/>
</function>
<function name='GMSGeometryHeading'>
<arg declared_type='CLLocationCoordinate2D' name='from' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' name='to' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='CLLocationDirection' type='d'/>
</function>
<function name='GMSGeometryInterpolate'>
<arg declared_type='CLLocationCoordinate2D' name='from' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' name='to' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='double' name='fraction' type='d'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</function>
<function name='GMSGeometryIsLocationOnPath'>
<arg declared_type='CLLocationCoordinate2D' name='point' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='GMSPath*' name='path' type='@'/>
<arg declared_type='BOOL' name='geodesic' type='B'/>
<arg declared_type='CLLocationDistance' name='tolerance' type='d'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='GMSGeometryLength'>
<arg declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='CLLocationDistance' type='d'/>
</function>
<function name='GMSGeometryOffset'>
<arg declared_type='CLLocationCoordinate2D' name='from' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationDistance' name='distance' type='d'/>
<arg declared_type='CLLocationDirection' name='heading' type='d'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</function>
<function name='GMSGeometrySignedArea'>
<arg declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='double' type='d'/>
</function>
<function name='GMSMapPointDistance'>
<arg declared_type='GMSMapPoint' name='a' type='{GMSMapPoint=dd}'/>
<arg declared_type='GMSMapPoint' name='b' type='{GMSMapPoint=dd}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='GMSMapPointInterpolate'>
<arg declared_type='GMSMapPoint' name='a' type='{GMSMapPoint=dd}'/>
<arg declared_type='GMSMapPoint' name='b' type='{GMSMapPoint=dd}'/>
<arg declared_type='double' name='t' type='d'/>
<retval declared_type='GMSMapPoint' type='{GMSMapPoint=dd}'/>
</function>
<function name='GMSOrientationMake' inline='true'>
<arg declared_type='CLLocationDirection' name='heading' type='d'/>
<arg declared_type='double' name='pitch' type='d'/>
<retval declared_type='GMSOrientation' type='{_GMSOrientation=dd}'/>
</function>
<function name='GMSProject'>
<arg declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='GMSMapPoint' type='{GMSMapPoint=dd}'/>
</function>
<function name='GMSStyleSpans'>
<arg declared_type='GMSPath*' name='path' type='@'/>
<arg declared_type='NSArray*' name='styles' type='@'/>
<arg declared_type='NSArray*' name='lengths' type='@'/>
<arg declared_type='int' name='lengthKind' type='i'/>
<arg declared_type='double' name='lengthOffset' type='d'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='GMSUnproject'>
<arg declared_type='GMSMapPoint' name='point' type='{GMSMapPoint=dd}'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</function>
<class name='GMSAddress'>
<method selector='addressLine1'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addressLine2'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='administrativeArea'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='coordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='country'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lines'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='locality'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='postalCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subLocality'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='thoroughfare'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GMSCameraPosition'>
<method selector='bearing'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='cameraWithLatitude:longitude:zoom:' class_method='true'>
<arg index='0' declared_type='CLLocationDegrees' name='latitude' type='d'/>
<arg index='1' declared_type='CLLocationDegrees' name='longitude' type='d'/>
<arg index='2' declared_type='float' name='zoom' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cameraWithLatitude:longitude:zoom:bearing:viewingAngle:' class_method='true'>
<arg index='0' declared_type='CLLocationDegrees' name='latitude' type='d'/>
<arg index='1' declared_type='CLLocationDegrees' name='longitude' type='d'/>
<arg index='2' declared_type='float' name='zoom' type='f'/>
<arg index='3' declared_type='CLLocationDirection' name='bearing' type='d'/>
<arg index='4' declared_type='double' name='viewingAngle' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cameraWithTarget:zoom:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='target' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='float' name='zoom' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cameraWithTarget:zoom:bearing:viewingAngle:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='target' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='float' name='zoom' type='f'/>
<arg index='2' declared_type='CLLocationDirection' name='bearing' type='d'/>
<arg index='3' declared_type='double' name='viewingAngle' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:zoom:bearing:viewingAngle:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='target' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='float' name='zoom' type='f'/>
<arg index='2' declared_type='CLLocationDirection' name='bearing' type='d'/>
<arg index='3' declared_type='double' name='viewingAngle' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='target'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='viewingAngle'>
<retval declared_type='double' type='d'/>
</method>
<method selector='zoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='zoomAtCoordinate:forMeters:perPoints:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='CLLocationDistance' name='meters' type='d'/>
<arg index='2' declared_type='CGFloat' name='points' type='f' type64='d'/>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GMSCameraUpdate'>
<method selector='fitBounds:' class_method='true'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='bounds' type='@'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='fitBounds:withEdgeInsets:' class_method='true'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='bounds' type='@'/>
<arg index='1' declared_type='UIEdgeInsets' name='edgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='fitBounds:withPadding:' class_method='true'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='bounds' type='@'/>
<arg index='1' declared_type='CGFloat' name='padding' type='f' type64='d'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='scrollByX:Y:' class_method='true'>
<arg index='0' declared_type='CGFloat' name='dX' type='f' type64='d'/>
<arg index='1' declared_type='CGFloat' name='dY' type='f' type64='d'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='setCamera:' class_method='true'>
<arg index='0' declared_type='GMSCameraPosition*' name='camera' type='@'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='setTarget:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='target' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='setTarget:zoom:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='target' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='float' name='zoom' type='f'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='zoomBy:' class_method='true'>
<arg index='0' declared_type='float' name='delta' type='f'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='zoomBy:atPoint:' class_method='true'>
<arg index='0' declared_type='float' name='zoom' type='f'/>
<arg index='1' declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='zoomIn' class_method='true'>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='zoomOut' class_method='true'>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
<method selector='zoomTo:' class_method='true'>
<arg index='0' declared_type='float' name='zoom' type='f'/>
<retval declared_type='GMSCameraUpdate*' type='@'/>
</method>
</class>
<class name='GMSCircle'>
<method selector='circleWithPosition:radius:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='position' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='CLLocationDistance' name='radius' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='fillColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='radius'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='setFillColor:'>
<arg index='0' declared_type='UIColor*' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='position' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg index='0' declared_type='CLLocationDistance' name='radius' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeColor:'>
<arg index='0' declared_type='UIColor*' name='strokeColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeWidth:'>
<arg index='0' declared_type='CGFloat' name='strokeWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='strokeWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='GMSCoordinateBounds'>
<method selector='containsCoordinate:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includingBounds:'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='other' type='@'/>
<retval declared_type='GMSCoordinateBounds*' type='@'/>
</method>
<method selector='includingCoordinate:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='GMSCoordinateBounds*' type='@'/>
</method>
<method selector='includingPath:'>
<arg index='0' declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='GMSCoordinateBounds*' type='@'/>
</method>
<method selector='initWithCoordinate:coordinate:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coord1' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coord2' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPath:'>
<arg index='0' declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRegion:'>
<arg index='0' declared_type='id' name='region' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intersectsBounds:'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='other' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='northEast'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='southWest'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
</class>
<class name='GMSGeocoder'>
<method selector='geocoder' class_method='true'>
<retval declared_type='GMSGeocoder*' type='@'/>
</method>
<method selector='reverseGeocodeCoordinate:completionHandler:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='GMSReverseGeocodeCallback' function_pointer='true' name='handler' type='@?'>
<arg declared_type='GMSReverseGeocodeResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSGroundOverlay'>
<method selector='anchor'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='bearing'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='bounds'>
<retval declared_type='GMSCoordinateBounds*' type='@'/>
</method>
<method selector='groundOverlayWithBounds:icon:' class_method='true'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='bounds' type='@'/>
<arg index='1' declared_type='UIImage*' name='icon' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='groundOverlayWithPosition:icon:zoomLevel:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='position' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='UIImage*' name='icon' type='@'/>
<arg index='2' declared_type='CGFloat' name='zoomLevel' type='f' type64='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='icon'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='setAnchor:'>
<arg index='0' declared_type='CGPoint' name='anchor' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBearing:'>
<arg index='0' declared_type='CLLocationDirection' name='bearing' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='bounds' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIcon:'>
<arg index='0' declared_type='UIImage*' name='icon' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='position' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSIndoorBuilding'>
<method selector='defaultLevelIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isUnderground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='levels'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setLevels:'>
<arg index='0' declared_type='NSArray*' name='levels' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSIndoorDisplay'>
<method selector='activeBuilding'>
<retval declared_type='GMSIndoorBuilding*' type='@'/>
</method>
<method selector='activeLevel'>
<retval declared_type='GMSIndoorLevel*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setActiveBuilding:'>
<arg index='0' declared_type='GMSIndoorBuilding*' name='activeBuilding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActiveLevel:'>
<arg index='0' declared_type='GMSIndoorLevel*' name='activeLevel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSIndoorLevel'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shortName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GMSMapLayer'>
<method selector='cameraBearing'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='cameraLatitude'>
<retval declared_type='CLLocationDegrees' type='d'/>
</method>
<method selector='cameraLongitude'>
<retval declared_type='CLLocationDegrees' type='d'/>
</method>
<method selector='cameraViewingAngle'>
<retval declared_type='double' type='d'/>
</method>
<method selector='cameraZoomLevel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setCameraBearing:'>
<arg index='0' declared_type='CLLocationDirection' name='cameraBearing' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraLatitude:'>
<arg index='0' declared_type='CLLocationDegrees' name='cameraLatitude' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraLongitude:'>
<arg index='0' declared_type='CLLocationDegrees' name='cameraLongitude' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraViewingAngle:'>
<arg index='0' declared_type='double' name='cameraViewingAngle' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraZoomLevel:'>
<arg index='0' declared_type='float' name='cameraZoomLevel' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSMapView'>
<method selector='accessibilityElementsHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='camera'>
<retval declared_type='GMSCameraPosition*' type='@'/>
</method>
<method selector='cameraForBounds:insets:'>
<arg index='0' declared_type='GMSCoordinateBounds*' name='bounds' type='@'/>
<arg index='1' declared_type='UIEdgeInsets' name='insets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='GMSCameraPosition*' type='@'/>
</method>
<method selector='clear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='indoorDisplay'>
<retval declared_type='GMSIndoorDisplay*' type='@'/>
</method>
<method selector='isBuildingsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isIndoorEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMyLocationEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTrafficEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layer'>
<retval declared_type='GMSMapLayer*' type='@'/>
</method>
<method selector='mapType'>
<retval declared_type='GMSMapViewType' type='i'/>
</method>
<method selector='mapWithFrame:camera:' class_method='true'>
<arg index='0' declared_type='CGRect' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg index='1' declared_type='GMSCameraPosition*' name='camera' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='moveCamera:'>
<arg index='0' declared_type='GMSCameraUpdate*' name='update' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='myLocation'>
<retval declared_type='CLLocation*' type='@'/>
</method>
<method selector='padding'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='projection'>
<retval declared_type='GMSProjection*' type='@'/>
</method>
<method selector='selectedMarker'>
<retval declared_type='GMSMarker*' type='@'/>
</method>
<method selector='setAccessibilityElementsHidden:'>
<arg index='0' declared_type='BOOL' name='accessibilityElementsHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBuildingsEnabled:'>
<arg index='0' declared_type='BOOL' name='buildingsEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCamera:'>
<arg index='0' declared_type='GMSCameraPosition*' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndoorDisplay:'>
<arg index='0' declared_type='GMSIndoorDisplay*' name='indoorDisplay' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndoorEnabled:'>
<arg index='0' declared_type='BOOL' name='indoorEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapType:'>
<arg index='0' declared_type='GMSMapViewType' name='mapType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinZoom:maxZoom:'>
<arg index='0' declared_type='float' name='minZoom' type='f'/>
<arg index='1' declared_type='float' name='maxZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMyLocation:'>
<arg index='0' declared_type='CLLocation*' name='myLocation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMyLocationEnabled:'>
<arg index='0' declared_type='BOOL' name='myLocationEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPadding:'>
<arg index='0' declared_type='UIEdgeInsets' name='padding' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedMarker:'>
<arg index='0' declared_type='GMSMarker*' name='selectedMarker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSettings:'>
<arg index='0' declared_type='int*' name='settings' type='^i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrafficEnabled:'>
<arg index='0' declared_type='BOOL' name='trafficEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='int*' type='^i'/>
</method>
<method selector='startRendering'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopRendering'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSMarker'>
<method selector='appearAnimation'>
<retval declared_type='GMSMarkerAnimation' type='i'/>
</method>
<method selector='groundAnchor'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='icon'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='infoWindowAnchor'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='isDraggable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFlat'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layer'>
<retval declared_type='GMSMarkerLayer*' type='@'/>
</method>
<method selector='markerImageWithColor:' class_method='true'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='markerWithPosition:' class_method='true'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='position' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='float' type='f'/>
</method>
<method selector='panoramaView'>
<retval declared_type='GMSPanoramaView*' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='rotation'>
<retval declared_type='CLLocationDegrees' type='d'/>
</method>
<method selector='setAppearAnimation:'>
<arg index='0' declared_type='GMSMarkerAnimation' name='appearAnimation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggable:'>
<arg index='0' declared_type='BOOL' name='draggable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlat:'>
<arg index='0' declared_type='BOOL' name='flat' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroundAnchor:'>
<arg index='0' declared_type='CGPoint' name='groundAnchor' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIcon:'>
<arg index='0' declared_type='UIImage*' name='icon' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInfoWindowAnchor:'>
<arg index='0' declared_type='CGPoint' name='infoWindowAnchor' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayer:'>
<arg index='0' declared_type='GMSMarkerLayer*' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='float' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanoramaView:'>
<arg index='0' declared_type='GMSPanoramaView*' name='panoramaView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='position' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg index='0' declared_type='CLLocationDegrees' name='rotation' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSnippet:'>
<arg index='0' declared_type='NSString*' name='snippet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg index='0' declared_type='id' name='userData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='snippet'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userData'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GMSMarkerLayer'>
<method selector='latitude'>
<retval declared_type='CLLocationDegrees' type='d'/>
</method>
<method selector='longitude'>
<retval declared_type='CLLocationDegrees' type='d'/>
</method>
<method selector='opacity'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rotation'>
<retval declared_type='CLLocationDegrees' type='d'/>
</method>
<method selector='setLatitude:'>
<arg index='0' declared_type='CLLocationDegrees' name='latitude' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongitude:'>
<arg index='0' declared_type='CLLocationDegrees' name='longitude' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='float' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg index='0' declared_type='CLLocationDegrees' name='rotation' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSMutableCameraPosition'>
<method selector='bearing'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='setBearing:'>
<arg index='0' declared_type='CLLocationDirection' name='bearing' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='target' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewingAngle:'>
<arg index='0' declared_type='double' name='viewingAngle' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoom:'>
<arg index='0' declared_type='float' name='zoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='viewingAngle'>
<retval declared_type='double' type='d'/>
</method>
<method selector='zoom'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GMSMutablePath'>
<method selector='addCoordinate:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coord' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLatitude:longitude:'>
<arg index='0' declared_type='CLLocationDegrees' name='latitude' type='d'/>
<arg index='1' declared_type='CLLocationDegrees' name='longitude' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertCoordinate:atIndex:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coord' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='NSUInteger' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllCoordinates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCoordinateAtIndex:'>
<arg index='0' declared_type='NSUInteger' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLastCoordinate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceCoordinateAtIndex:withCoordinate:'>
<arg index='0' declared_type='NSUInteger' name='index' type='I' type64='Q'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coord' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSOverlay'>
<method selector='isTappable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='map'>
<retval declared_type='GMSMapView*' type='@'/>
</method>
<method selector='setMap:'>
<arg index='0' declared_type='GMSMapView*' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTappable:'>
<arg index='0' declared_type='BOOL' name='tappable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg index='0' declared_type='NSString*' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZIndex:'>
<arg index='0' declared_type='int' name='zIndex' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='zIndex'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='GMSPanorama'>
<method selector='coordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='links'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='panoramaID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GMSPanoramaCamera'>
<method selector='FOV'>
<retval declared_type='double' type='d'/>
</method>
<method selector='cameraWithHeading:pitch:zoom:' class_method='true'>
<arg index='0' declared_type='CLLocationDirection' name='heading' type='d'/>
<arg index='1' declared_type='double' name='pitch' type='d'/>
<arg index='2' declared_type='float' name='zoom' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cameraWithHeading:pitch:zoom:FOV:' class_method='true'>
<arg index='0' declared_type='CLLocationDirection' name='heading' type='d'/>
<arg index='1' declared_type='double' name='pitch' type='d'/>
<arg index='2' declared_type='float' name='zoom' type='f'/>
<arg index='3' declared_type='double' name='FOV' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cameraWithOrientation:zoom:' class_method='true'>
<arg index='0' declared_type='GMSOrientation' name='orientation' type='{_GMSOrientation=dd}'/>
<arg index='1' declared_type='float' name='zoom' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cameraWithOrientation:zoom:FOV:' class_method='true'>
<arg index='0' declared_type='GMSOrientation' name='orientation' type='{_GMSOrientation=dd}'/>
<arg index='1' declared_type='float' name='zoom' type='f'/>
<arg index='2' declared_type='double' name='FOV' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithOrientation:zoom:FOV:'>
<arg index='0' declared_type='GMSOrientation' name='orientation' type='{_GMSOrientation=dd}'/>
<arg index='1' declared_type='float' name='zoom' type='f'/>
<arg index='2' declared_type='double' name='FOV' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='GMSOrientation' type='{_GMSOrientation=dd}'/>
</method>
<method selector='zoom'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GMSPanoramaCameraUpdate'>
<method selector='rotateBy:' class_method='true'>
<arg index='0' declared_type='CGFloat' name='deltaHeading' type='f' type64='d'/>
<retval declared_type='GMSPanoramaCameraUpdate*' type='@'/>
</method>
<method selector='setHeading:' class_method='true'>
<arg index='0' declared_type='CGFloat' name='heading' type='f' type64='d'/>
<retval declared_type='GMSPanoramaCameraUpdate*' type='@'/>
</method>
<method selector='setPitch:' class_method='true'>
<arg index='0' declared_type='CGFloat' name='pitch' type='f' type64='d'/>
<retval declared_type='GMSPanoramaCameraUpdate*' type='@'/>
</method>
<method selector='setZoom:' class_method='true'>
<arg index='0' declared_type='CGFloat' name='zoom' type='f' type64='d'/>
<retval declared_type='GMSPanoramaCameraUpdate*' type='@'/>
</method>
</class>
<class name='GMSPanoramaLayer'>
<method selector='cameraFOV'>
<retval declared_type='double' type='d'/>
</method>
<method selector='cameraHeading'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='cameraPitch'>
<retval declared_type='double' type='d'/>
</method>
<method selector='cameraZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setCameraFOV:'>
<arg index='0' declared_type='double' name='cameraFOV' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraHeading:'>
<arg index='0' declared_type='CLLocationDirection' name='cameraHeading' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraPitch:'>
<arg index='0' declared_type='double' name='cameraPitch' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraZoom:'>
<arg index='0' declared_type='float' name='cameraZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSPanoramaLink'>
<method selector='heading'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='panoramaID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setHeading:'>
<arg index='0' declared_type='CGFloat' name='heading' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanoramaID:'>
<arg index='0' declared_type='NSString*' name='panoramaID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSPanoramaService'>
<method selector='requestPanoramaNearCoordinate:callback:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='GMSPanoramaCallback' function_pointer='true' name='callback' type='@?'>
<arg declared_type='GMSPanorama*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestPanoramaNearCoordinate:radius:callback:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='NSUInteger' name='radius' type='I' type64='Q'/>
<arg index='2' declared_type='GMSPanoramaCallback' function_pointer='true' name='callback' type='@?'>
<arg declared_type='GMSPanorama*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestPanoramaWithID:callback:'>
<arg index='0' declared_type='NSString*' name='panoramaID' type='@'/>
<arg index='1' declared_type='GMSPanoramaCallback' function_pointer='true' name='callback' type='@?'>
<arg declared_type='GMSPanorama*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GMSPanoramaView'>
<method selector='animateToCamera:animationDuration:'>
<arg index='0' declared_type='GMSPanoramaCamera*' name='camera' type='@'/>
<arg index='1' declared_type='NSTimeInterval' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='camera'>
<retval declared_type='GMSPanoramaCamera*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='layer'>
<retval declared_type='GMSPanoramaLayer*' type='@'/>
</method>
<method selector='moveNearCoordinate:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveNearCoordinate:radius:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='1' declared_type='NSUInteger' name='radius' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToPanoramaID:'>
<arg index='0' declared_type='NSString*' name='panoramaID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationGestures'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationLinksHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='orientationForPoint:'>
<arg index='0' declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='GMSOrientation' type='{_GMSOrientation=dd}'/>
</method>
<method selector='orientationGestures'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panorama'>
<retval declared_type='GMSPanorama*' type='@'/>
</method>
<method selector='panoramaWithFrame:nearCoordinate:' class_method='true'>
<arg index='0' declared_type='CGRect' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='panoramaWithFrame:nearCoordinate:radius:' class_method='true'>
<arg index='0' declared_type='CGRect' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg index='2' declared_type='NSUInteger' name='radius' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pointForOrientation:'>
<arg index='0' declared_type='GMSOrientation' name='orientation' type='{_GMSOrientation=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='setAllGesturesEnabled:'>
<arg index='0' declared_type='BOOL' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCamera:'>
<arg index='0' declared_type='GMSPanoramaCamera*' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNavigationGestures:'>
<arg index='0' declared_type='BOOL' name='navigationGestures' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNavigationLinksHidden:'>
<arg index='0' declared_type='BOOL' name='navigationLinksHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientationGestures:'>
<arg index='0' declared_type='BOOL' name='orientationGestures' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanorama:'>
<arg index='0' declared_type='GMSPanorama*' name='panorama' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStreetNamesHidden:'>
<arg index='0' declared_type='BOOL' name='streetNamesHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoomGestures:'>
<arg index='0' declared_type='BOOL' name='zoomGestures' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='streetNamesHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateCamera:animationDuration:'>
<arg index='0' declared_type='GMSPanoramaCameraUpdate*' name='cameraUpdate' type='@'/>
<arg index='1' declared_type='NSTimeInterval' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomGestures'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='GMSPath'>
<method selector='coordinateAtIndex:'>
<arg index='0' declared_type='NSUInteger' name='index' type='I' type64='Q'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='encodedPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg index='0' declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lengthOfKind:'>
<arg index='0' declared_type='GMSLengthKind' name='kind' type='i'/>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='path' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pathFromEncodedPath:' class_method='true'>
<arg index='0' declared_type='NSString*' name='encodedPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pathOffsetByLatitude:longitude:'>
<arg index='0' declared_type='CLLocationDegrees' name='deltaLatitude' type='d'/>
<arg index='1' declared_type='CLLocationDegrees' name='deltaLongitude' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='segmentsForLength:kind:'>
<arg index='0' declared_type='CLLocationDistance' name='length' type='d'/>
<arg index='1' declared_type='GMSLengthKind' name='kind' type='i'/>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='GMSPolygon'>
<method selector='fillColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='geodesic'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='path'>
<retval declared_type='GMSPath*' type='@'/>
</method>
<method selector='polygonWithPath:' class_method='true'>
<arg index='0' declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFillColor:'>
<arg index='0' declared_type='UIColor*' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGeodesic:'>
<arg index='0' declared_type='BOOL' name='geodesic' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg index='0' declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeColor:'>
<arg index='0' declared_type='UIColor*' name='strokeColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeWidth:'>
<arg index='0' declared_type='CGFloat' name='strokeWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='strokeWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='GMSPolyline'>
<method selector='geodesic'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='path'>
<retval declared_type='GMSPath*' type='@'/>
</method>
<method selector='polylineWithPath:' class_method='true'>
<arg index='0' declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setGeodesic:'>
<arg index='0' declared_type='BOOL' name='geodesic' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg index='0' declared_type='GMSPath*' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpans:'>
<arg index='0' declared_type='NSArray*' name='spans' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeColor:'>
<arg index='0' declared_type='UIColor*' name='strokeColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeWidth:'>
<arg index='0' declared_type='CGFloat' name='strokeWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spans'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='strokeColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='strokeWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='GMSProjection'>
<method selector='containsCoordinate:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='coordinateForPoint:'>
<arg index='0' declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='pointForCoordinate:'>
<arg index='0' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='pointsForMeters:atCoordinate:'>
<arg index='0' declared_type='CLLocationDistance' name='meters' type='d'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='visibleRegion'>
<retval declared_type='GMSVisibleRegion' type='{_GMSVisibleRegion={?=dd}{?=dd}{?=dd}{?=dd}}'/>
</method>
</class>
<class name='GMSReverseGeocodeResponse'>
<method selector='firstResult'>
<retval declared_type='GMSAddress*' type='@'/>
</method>
<method selector='results'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='GMSServices'>
<method selector='SDKVersion' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='openSourceLicenseInfo' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='provideAPIKey:' class_method='true'>
<arg index='0' declared_type='NSString*' name='APIKey' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sharedServices' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GMSStrokeStyle'>
<method selector='gradientFromColor:toColor:' class_method='true'>
<arg index='0' declared_type='UIColor*' name='fromColor' type='@'/>
<arg index='1' declared_type='UIColor*' name='toColor' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='solidColor:' class_method='true'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GMSStyleSpan'>
<method selector='segments'>
<retval declared_type='double' type='d'/>
</method>
<method selector='spanWithColor:' class_method='true'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spanWithColor:segments:' class_method='true'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<arg index='1' declared_type='double' name='segments' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spanWithStyle:' class_method='true'>
<arg index='0' declared_type='GMSStrokeStyle*' name='style' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spanWithStyle:segments:' class_method='true'>
<arg index='0' declared_type='GMSStrokeStyle*' name='style' type='@'/>
<arg index='1' declared_type='double' name='segments' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='style'>
<retval declared_type='GMSStrokeStyle*' type='@'/>
</method>
</class>
<class name='GMSSyncTileLayer'>
<method selector='tileForX:y:zoom:'>
<arg index='0' declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg index='1' declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<arg index='2' declared_type='NSUInteger' name='zoom' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='GMSTileLayer'>
<method selector='clearTileCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fadeIn'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='map'>
<retval declared_type='GMSMapView*' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='float' type='f'/>
</method>
<method selector='requestTileForX:y:zoom:receiver:'>
<arg index='0' declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg index='1' declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<arg index='2' declared_type='NSUInteger' name='zoom' type='I' type64='Q'/>
<arg index='3' declared_type='id' name='receiver' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFadeIn:'>
<arg index='0' declared_type='BOOL' name='fadeIn' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMap:'>
<arg index='0' declared_type='GMSMapView*' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='float' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg index='0' declared_type='NSInteger' name='tileSize' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZIndex:'>
<arg index='0' declared_type='int' name='zIndex' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSize'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='zIndex'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='GMSUISettings'>
<method selector='compassButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='consumesGesturesInView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indoorPicker'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='myLocationButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rotateGestures'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scrollGestures'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAllGesturesEnabled:'>
<arg index='0' declared_type='BOOL' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompassButton:'>
<arg index='0' declared_type='BOOL' name='compassButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConsumesGesturesInView:'>
<arg index='0' declared_type='BOOL' name='consumesGesturesInView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndoorPicker:'>
<arg index='0' declared_type='BOOL' name='indoorPicker' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMyLocationButton:'>
<arg index='0' declared_type='BOOL' name='myLocationButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotateGestures:'>
<arg index='0' declared_type='BOOL' name='rotateGestures' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollGestures:'>
<arg index='0' declared_type='BOOL' name='scrollGestures' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiltGestures:'>
<arg index='0' declared_type='BOOL' name='tiltGestures' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoomGestures:'>
<arg index='0' declared_type='BOOL' name='zoomGestures' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tiltGestures'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='zoomGestures'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='GMSURLTileLayer'>
<method selector='setUserAgent:'>
<arg index='0' declared_type='NSString*' name='userAgent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileLayerWithURLConstructor:' class_method='true'>
<arg index='0' declared_type='GMSTileURLConstructor' function_pointer='true' name='constructor' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='userAgent'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='didChangeActiveBuilding:'>
<arg index='0' declared_type='GMSIndoorBuilding*' name='building' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didChangeActiveLevel:'>
<arg index='0' declared_type='GMSIndoorLevel*' name='level' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didTapMyLocationButtonForMapView:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapView:didBeginDraggingMarker:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didChangeCameraPosition:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSCameraPosition*' name='position' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didDragMarker:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didEndDraggingMarker:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didLongPressAtCoordinate:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didTapAtCoordinate:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didTapInfoWindowOfMarker:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didTapMarker:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapView:didTapOverlay:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSOverlay*' name='overlay' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:idleAtCameraPosition:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSCameraPosition*' name='position' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:markerInfoContents:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='mapView:markerInfoWindow:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='mapView:willMove:'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='BOOL' name='gesture' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didMoveCamera:'>
<arg index='0' declared_type='GMSPanoramaView*' name='panoramaView' type='@'/>
<arg index='1' declared_type='GMSPanoramaCamera*' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didMoveToPanorama:'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='GMSPanorama*' name='panorama' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didMoveToPanorama:nearCoordinate:'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='GMSPanorama*' name='panorama' type='@'/>
<arg index='2' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didTap:'>
<arg index='0' declared_type='GMSPanoramaView*' name='panoramaView' type='@'/>
<arg index='1' declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didTapMarker:'>
<arg index='0' declared_type='GMSPanoramaView*' name='panoramaView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panoramaView:error:onMoveNearCoordinate:'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='NSError*' name='error' type='@'/>
<arg index='2' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:error:onMoveToPanoramaID:'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='NSError*' name='error' type='@'/>
<arg index='2' declared_type='NSString*' name='panoramaID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:willMoveToPanoramaID:'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='NSString*' name='panoramaID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='receiveTileWithX:y:zoom:image:'>
<arg index='0' declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg index='1' declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<arg index='2' declared_type='NSUInteger' name='zoom' type='I' type64='Q'/>
<arg index='3' declared_type='UIImage*' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='GMSIndoorDisplayDelegate'>
<method selector='didChangeActiveBuilding:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' declared_type='GMSIndoorBuilding*' name='building' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didChangeActiveLevel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg index='0' declared_type='GMSIndoorLevel*' name='level' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GMSMapViewDelegate'>
<method selector='didTapMyLocationButtonForMapView:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapView:didBeginDraggingMarker:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didChangeCameraPosition:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSCameraPosition*' name='position' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didDragMarker:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didEndDraggingMarker:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didLongPressAtCoordinate:' type='v28@0:4@8{?=dd}12' type64='v40@0:8@16{?=dd}24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didTapAtCoordinate:' type='v28@0:4@8{?=dd}12' type64='v40@0:8@16{?=dd}24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didTapInfoWindowOfMarker:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didTapMarker:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapView:didTapOverlay:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSOverlay*' name='overlay' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:idleAtCameraPosition:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSCameraPosition*' name='position' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:markerInfoContents:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='mapView:markerInfoWindow:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='mapView:willMove:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg index='0' declared_type='GMSMapView*' name='mapView' type='@'/>
<arg index='1' declared_type='BOOL' name='gesture' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GMSPanoramaViewDelegate'>
<method selector='panoramaView:didMoveCamera:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSPanoramaView*' name='panoramaView' type='@'/>
<arg index='1' declared_type='GMSPanoramaCamera*' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didMoveToPanorama:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='GMSPanorama*' name='panorama' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didMoveToPanorama:nearCoordinate:' type='v32@0:4@8@12{?=dd}16' type64='v48@0:8@16@24{?=dd}32'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='GMSPanorama*' name='panorama' type='@'/>
<arg index='2' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didTap:' type='v20@0:4@8{CGPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg index='0' declared_type='GMSPanoramaView*' name='panoramaView' type='@'/>
<arg index='1' declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:didTapMarker:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg index='0' declared_type='GMSPanoramaView*' name='panoramaView' type='@'/>
<arg index='1' declared_type='GMSMarker*' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panoramaView:error:onMoveNearCoordinate:' type='v32@0:4@8@12{?=dd}16' type64='v48@0:8@16@24{?=dd}32'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='NSError*' name='error' type='@'/>
<arg index='2' declared_type='CLLocationCoordinate2D' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:error:onMoveToPanoramaID:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='NSError*' name='error' type='@'/>
<arg index='2' declared_type='NSString*' name='panoramaID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panoramaView:willMoveToPanoramaID:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg index='0' declared_type='GMSPanoramaView*' name='view' type='@'/>
<arg index='1' declared_type='NSString*' name='panoramaID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GMSTileReceiver'>
<method selector='receiveTileWithX:y:zoom:image:' type='v24@0:4I8I12I16@20' type64='v48@0:8Q16Q24Q32@40'>
<arg index='0' declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg index='1' declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<arg index='2' declared_type='NSUInteger' name='zoom' type='I' type64='Q'/>
<arg index='3' declared_type='UIImage*' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
